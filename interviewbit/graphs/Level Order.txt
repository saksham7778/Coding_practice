/**
 * Definition for binary tree
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
 
vector<vector<int> > ans;

vector<vector<int> > Solution::levelOrder(TreeNode* root) {
    
    if(!root) return ans;
    ans.clear();
    queue<TreeNode*> q;
    q.push(root);
    
    while(!q.empty()){
        int n = q.size();
        vector<int> v;v.clear();
        for(int i=0;i<n;i++){
            TreeNode *temp = q.front(); q.pop();
            v.push_back(temp->val);
            if(temp->left) q.push(temp->left);
            if(temp->right) q.push(temp->right);
        }
        ans.push_back(v);
    }
    
    return ans;
}
