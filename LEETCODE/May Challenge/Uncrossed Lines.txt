class Solution {
public:
    int maxUncrossedLines(vector<int>& A, vector<int>& B) {
        
        int n =A.size();
        int m =B.size();
        
        int dp[n+1][m+1];
        memset(dp,0,sizeof(dp));

        for(int i=0;i<=n;i++){
            dp[i][0]=0;
        }
        for(int i=0;i<=m;i++){
            dp[0][i]=0;
        }
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=m;j++){
                if(A[i-1]==B[j-1]){
                  dp[i][j]=1+dp[i-1][j-1];  
                }
                else{
                    // cout<<i-1<<" ** "<<j-1<<"\n";
                    dp[i][j]= max(dp[i-1][j],dp[i][j-1]);
                }
            }
        }
        
        //  for(int i=0;i<=n;i++){
        //     for(int j=0;j<=m;j++){
        //         cout<<dp[i][j]<<" ";
        //     }
        //     cout<<"\n";
        // }
        
        return dp[n][m];
    }
};