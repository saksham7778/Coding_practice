/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public: 
    vector<vector<int>> ans;
    void help(TreeNode *root,vector<int> temp,int sum){
    
        sum = sum-root->val;
        temp.push_back(root->val);
        
        if(!root->left && !root->right && sum==0){
            ans.push_back(temp);
            return;
        }
            
        if(root->left){
            help(root->left,temp,sum);
        }
        if(root->right){
            help(root->right,temp,sum);
        }
        
        return;
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        
        if(!root) return ans;
        vector<int> temp;
        help(root,temp,sum);
        
        return ans;
    }
};