/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        
        vector<vector<int>> ans;
        vector<int> temp;
        
        if(root==NULL)
            return ans;
        
        queue<TreeNode *> q;
        q.push(root);
        q.push(NULL);
        

        while(!q.empty()){
            TreeNode *fr = q.front();
            q.pop();
            
            if(fr!=NULL){
                temp.push_back(fr->val);
                // cout<<fr->val<<" ";

                if(fr->left) q.push(fr->left);
                if(fr->right) q.push(fr->right);
            }
            else{
                if(q.empty()){
                    ans.push_back(temp);
                    temp.clear();
                    break;
                }
                q.push(NULL);
                ans.push_back(temp);
                temp.clear();
            }
        }
       
        return ans;
    }
};