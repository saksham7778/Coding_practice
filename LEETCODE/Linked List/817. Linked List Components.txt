/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    int numComponents(ListNode* head, vector<int>& v) {
        
        if(head == NULL)
            return 0;
        unordered_set<int> s;
        for(int i=0;i<v.size();i++){
            s.insert(v[i]);
        }
        
        // for(auto i:s){
        //     cout<<i<<"\n";
        // }
        
        int count =0;
        ListNode *temp = head;
        
        
        while(temp!=NULL){
            if( (s.find(temp->val) != s.end()) && 
                ( (temp->next==NULL) || (s.find(temp->next->val) == s.end() ) ) ){
                count++;
            }
            temp=temp->next;
        }
        
        
        return count;
    }
};