#define deb(v) cout<<#v<<" = "<<v<<"\n";
class Solution {
public:
    
    int lcs(string s1,string s2,int n1,int n2){
        
        int dp[n1+1][n2+1];
        memset(dp,0,sizeof(dp));
        
        for(int i=0;i<=n1;i++) dp[0][i]=0;
        for(int i=0;i<=n2;i++) dp[i][0]=0;
        
        for(int i=1;i<=n1;i++){
            for(int j=1;j<=n2;j++){
                if(s1[i-1]==s2[j-1])
                    dp[i][j] = 1+dp[i-1][j-1];
                else{
                    dp[i][j] = max(dp[i-1][j] , dp[i][j-1]);
                }
            }
        }
        
        return dp[n1][n2];
    }
    
    int longestPalindromeSubseq(string s1) {
        
        if(s1.length()==0) return 0;
        string s2;s2=s1;
        reverse(s1.begin(),s1.end());
        // deb(s1);deb(s2);
        
        return lcs(s1,s2,s1.length(),s2.length());
    }
};