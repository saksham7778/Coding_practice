class Solution {
public:
    
    bool help(string s,  string p,   int n , int m, vector<vector<int>> &dp){
        if(dp[n][m]!=-1) return dp[n][m];
        if(m==0){
            if(n==0) return dp[n][m] = 1;
            else return dp[n][m] = 0;
        }
        if(n==0){
            for(int i=m-1;i>=0;i--) {
                if(p[i]!='*') return dp[n][m] = 0;
            }
            return dp[n][m] = 1;
        }
        
                
        bool ans = false;
        if(s[n-1]==p[m-1] || p[m-1]=='?'){
            if(dp[n-1][m-1]!=-1) 
                ans = dp[n-1][m];
            else
                ans = help(s,p,n-1,m-1,dp);
        }
        else if(p[m-1]=='*'){
            
            bool op1,op2;
            if(dp[n-1][m]!=-1) 
                op1 = dp[n-1][m];
            else 
                op1 = help(s,p,n-1,m,dp);
            
            if(dp[n][m-1]!=-1) 
                op2 = dp[n][m-1];
            else 
                op2 = help(s,p,n  ,m-1,dp);
            
            ans = (op1|op2);
        }
        dp[n][m] = ans;
        return ans;
    }
    
    bool isMatch(string s, string p) {
        int n = s.length();
        int m = p.length();
        vector<vector<int>> dp(n+1,vector<int>(m+1,-1));
        return help(s,p,n,m,dp);
    }
};