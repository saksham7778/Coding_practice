class Solution {
public:
    int coinChange(vector<int>& ar, int k) {
        
        int n = ar.size();
        
        int dp[n+1][k+1];
        
        for(int i=0;i<=k;i++)
            dp[0][i] = INT_MAX-1;
        
        for(int i=1;i<=n;i++)
            dp[i][0] = 0;
        
        
        for(int i=1;i<=n;i++){
            for(int j=1;j<=k;j++){
                if(j>=ar[i-1]){
                    dp[i][j] = min(1+dp[i][j-ar[i-1]] , dp[i-1][j]);
                }  else{
                    dp[i][j] = dp[i-1][j];
                } 
            }
        }
        
        if(dp[n][k] >= INT_MAX-1) 
            return -1;
        return dp[n][k];
        
    }
};