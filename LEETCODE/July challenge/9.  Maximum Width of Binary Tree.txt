/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    int help(TreeNode* root){
        deque<TreeNode*> q;q.push_back(root);
        int ans =1;
        while(!q.empty()){
            while(!q.empty() && q.front()==NULL) q.pop_front();
            while(!q.empty() && q.back()==NULL) q.pop_back();
            
            int n = q.size(); 
            ans = max(ans,n);
            
            for(int i=0;i<n;i++){
                
                TreeNode* cur=q.front();q.pop_front();
                
                if(cur==NULL){
                    q.push_back(NULL);q.push_back(NULL);
                }
                else{
                    q.push_back(cur->left);q.push_back(cur->right);
                }
            }
            
        }
        return ans;
    }
    
    int widthOfBinaryTree(TreeNode* root) {
        
        if(!root) return 0;
        
        return help(root);
    }
};