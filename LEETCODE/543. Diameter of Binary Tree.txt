/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    
    class PairAns {
        public :
        int height;
        int diameter;
    };
    
    PairAns getDiameter(TreeNode *root) {
    
        if(root == NULL){
            PairAns p;
            p.height=0;
            p.diameter = 0;
            return p;
        }

        PairAns left = getDiameter(root->left);
        PairAns right = getDiameter(root->right);

        int height = max(left.height, right.height)+1;
        int diameter = max(left.height+right.height , max(left.diameter,right.diameter) );

        PairAns ans;
        ans.height = height;
        ans.diameter = diameter;

        return ans;
    }

    int diameterOfBinaryTree(TreeNode* root) {
        if(!root) return 0;
        
        PairAns ans = getDiameter(root);
        
        return ans.diameter;
    }
};