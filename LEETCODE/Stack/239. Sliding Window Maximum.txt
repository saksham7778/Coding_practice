class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
        
        vector<int> ans;
        
        int n = nums.size();int start=1;    if(n==0) return ans;
        deque<pair<int,int>> q;
        
        for(int i=0;i<k;i++){
            while(!q.empty() && nums[i] >= q.back().second) q.pop_back();
            q.push_back(make_pair(i,nums[i]));
        }
        
        ans.push_back(q.front().second);
        
        
        for(int i=k;i<n;i++){
            
            // removes previous characters
            while(!q.empty() && start>q.front().first) q.pop_front();
            start++;
            
            // adds new character
            while(!q.empty() && nums[i] >= q.back().second) q.pop_back();
            q.push_back(make_pair(i,nums[i]));
            
            ans.push_back(q.front().second);
        }
        
        return ans;
    }
};