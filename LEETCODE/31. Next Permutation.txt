class Solution {
public:
    void nextPermutation(vector<int>& nums) {
        
        int n = nums.size();int index;
        if(n==0||n==1) return;
        
        for(int i=n-2;i>=0;i--){
            if(nums[i]<nums[i+1]){
                index=i;
                break;
            }
        }
        cout<<index<<"\n";
        if(index==-1){
            sort(nums.begin(),nums.end());
        }
        else{
            int help_index=INT_MAX;
            int mini=INT_MAX;
            for(int j=index+1;j<=n-1;j++){
                if(nums[j]>nums[index] && mini>nums[j]){
                    mini=nums[j];
                    help_index=j;
                }
            }
            cout<<help_index<<"\n";
            swap(nums[index],nums[help_index]);
            sort(nums.begin()+index+1,nums.end());
            // for(int i=0;i<n;i++){
            //     cout<<nums[i]<<" ";
            // }
            // cout<<"\n";
        }    
        return;
    }
};