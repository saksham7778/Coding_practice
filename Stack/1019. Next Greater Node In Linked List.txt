/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
     void help(vector<int> &ar,int n,vector<int> &ans){
     
        stack<int> s;
        s.push(0);
        for(int i=1;i<n;i++){
            if(ar[i] <= ar[s.top()] )
                s.push(i);
            else{
                while(!s.empty() && ar[i] > ar[s.top()]){
                    ans[s.top()]=ar[i];
                    s.pop();
                }
                s.push(i);
            }
        }

        return;
    }
    vector<int> nextLargerNodes(ListNode* head) {
        
        vector<int> empty;
        if(head == NULL)
            return empty;
        
        vector<int> v;
        ListNode *temp = head;
        
        while(temp!=NULL){
            v.push_back(temp->val);
            temp=temp->next;
        }
        vector<int> ans(v.size(),0);
        help(v,v.size(),ans);
        return ans;
        
    }
};